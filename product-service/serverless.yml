# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: product-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  environment:
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PG_PORT}
    PG_NAME: ${env:PG_NAME}
    PG_USERNAME: ${env:PG_USERNAME}
    PG_PASSWORD: ${env:PG_PASSWORD}
    REGION: ${opt:region, self:custom.region}

    SQS_TOPIC: catalogItemsQueue
    SNS_TOPIC: !Ref createProductTopic
    
  stage: dev
  region: ${opt:region, self:custom.region}

iamRoleStatements:
  - Effect: "Allow"
    Action:
      - "sqs:*"
    Resource: 
      - Fn::GetAtt:
          - catalogItemsQueue
          - Arn
  - Effect: "Allow"
    Action:
      - "sns:*"
    Resource: 
      - !Ref createProductTopic


custom:
  region: eu-west-1
  dotenv:
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

functions:
  getAllProducts:
    handler: handler.getAllProducts
    events:
      - http:
          path: products
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
      
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          method: get
          path: products/{id}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
          request:
            parameters:
              paths:
                id: true
                  
  createProduct:
    handler: handler.createProducts
    events:
      - http:
          method: post
          path: products
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
          request:
            parameters:
              paths:
                id: true

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    createProductTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: lard.tut.by@gmail.com
        TopicArn : !Ref 'createProductTopic'
        FilterPolicy:
          owner:
            - manager
    createProductTopicSubscription2:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: lard.tut.by@gmail.com
        TopicArn : !Ref 'createProductTopic'
        FilterPolicy:
          owner:
            - developer
  Outputs:
    createProductTopic:
      Value: !Ref createProductTopic
      Export:
        Name: createProductTopic
    catalogItemsQueue:
      Value: 
        Fn::GetAtt:
                - catalogItemsQueue
                - Arn
      Export:
        Name: catalogItemsQueue